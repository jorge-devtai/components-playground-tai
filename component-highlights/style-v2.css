@layer reset {
    * {
      font-family: Arial, Helvetica, sans-serif;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
  
    .layout[data-layout=sidebar].mt-0, mt-0, .modulo-section .desplegable-content>.wrapper:last-of-type { margin:0; padding:0 !important;}
    .modulo-section { background-color: #d12216 !important;}
  
    :is(h2+p) { margin:unset !important; padding: unset; }
  
  }
  
@layer custom-grid {
    .custom-grid {
        --grid-max-column-count: attr(max-column-count type(<number>), 3);
        --grid-min-column: attr(min-column type(<length>), 400px);
        --grid-gap: 1rem;

        --grid-column-size-calc: calc((100% - var(--grid-gap) * var(--grid-max-column-count) - var(--grid-gap)) / var(--grid-max-column-count));

        display: grid;
        grid-template-columns: repeat(auto-fit,
                minmax(min(100%, max(var(--grid-min-column), var(--grid-column-size-calc))), 1fr));
        gap: var(--grid-gap);
    }
}

@layer custom_images {
    .image-container--horizontal {
      display: flex;
  
      & img {
        max-inline-size: 100%;
        flex: 1;
        object-fit: cover;
        aspect-ratio: 16 / 9;
      }
    }
  
    .image-container--vertical {
      display: flex;
  
      & img {
        max-inline-size: 100%;
        flex: 1;
        object-fit: cover;
      }
    }
  }

@layer component-highlights {

    .layout-highlights {
        display: flex;
        max-block-size: 480px;
        overflow: hidden;
    }

    .small-box {
        flex: 1 2 auto
    }

    .big-box {
      flex: 3 1 100%;

    }

    .pile {
        display: grid;
        > * {
            grid-area: 1/1;
        }
    }

    .box-container-highlight {
        display: flex;
        gap: 1rem;
    }

    .box-container-highlight__info-content {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .wrapper-description {
        display: grid;
        grid-template-rows: 0fr;
        transition: grid-template-rows 500ms ease-out;

        > p {
            overflow: hidden;
        }
    }

    .box-container-highlight:has(input[type="radio"]:checked) .wrapper-description {
        grid-template-rows: 1fr;
    }

    .image-highlight  {
        position: relative;
      
        &:has(:checked) {
          z-index: 9;
        }
        > figure {
            background-color: white;
          }
        
    }  

    input[type="radio"] {
        opacity: 0;
    }

}

